#BlueJ class context
comment0.params=
comment0.target=UnDirectedGraph()
comment0.text=\r\n\ Default\ constructor.\r\n
comment1.params=name
comment1.target=boolean\ addNode(java.lang.Object)
comment1.text=\r\n\ Method\ to\ add\ a\ node\ to\ the\ graph.\r\n\ \r\n\ @param\ name\ Key\ used\ to\ create\ node.\r\n\ @return\ Returns\ whether\ or\ not\ the\ node\ was\ successfully\ added.\r\n
comment2.params=k1\ k2\ cost
comment2.target=boolean\ addEdge(java.lang.Object,\ java.lang.Object,\ double)
comment2.text=\r\n\ Method\ to\ add\ an\ edge\ to\ the\ graph.\r\n\ \r\n\ @param\ k1\ Key\ for\ first\ node\ in\ the\ edge.\r\n\ @param\ k2\ Key\ for\ second\ node\ in\ the\ edge.\r\n\ @param\ cost\ Weight\ for\ this\ edge\r\n\ @return\ Returns\ whether\ or\ not\ the\ edge\ was\ successfully\ added.\r\n
comment3.params=k1\ k2
comment3.target=Path\ findShortestPath(java.lang.Object,\ java.lang.Object)
comment3.text=\r\n\ Method\ to\ find\ the\ shortest\ path\ between\ two\ nodes.\r\n\ \r\n\ @param\ k1\ Key\ for\ first\ node.\r\n\ @param\ k2\ Key\ for\ second\ node.\r\n\ @return\ Returns\ a\ list\ of\ nodes\ describing\ the\ shortest\ path.\r\n
comment4.params=
comment4.target=void\ clearAll()
comment4.text=\r\n\ Method\ to\ reset\ the\ shortest\ path\ data\ stored\ within\ each\ node.\r\n
comment5.params=
comment5.target=int\ getNodeCount()
comment5.text=\r\n\ Method\ to\ get\ the\ number\ of\ nodes.\r\n\ \r\n\ @return\ Returns\ the\ number\ of\ nodes.\r\n
comment6.params=k
comment6.target=UnDirectedGraph.UnDirectedGraphNode\ getNode(java.lang.Object)
comment6.text=\r\n\ Method\ to\ get\ a\ specific\ node.\r\n\ \r\n\ @param\ k\ Key\ for\ node\ to\ be\ retrieved\r\n\ @return\ Returns\ the\ node\ associated\ with\ key\ (or\ null\ if\ empty).\r\n
comment7.params=
comment7.target=java.util.Set\ getNodeSet()
comment7.text=\r\n\ Method\ to\ get\ the\ set\ of\ nodes\ in\ this\ graph.\r\n\ \r\n\ @return\ Returns\ the\ nodes\ as\ a\ Set\ of\ keys.\r\n
numComments=8
