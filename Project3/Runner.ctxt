#BlueJ class context
comment0.params=cost_per_distance
comment0.target=Runner(int)
comment0.text=\r\n\ Default\ constructor.\r\n\ \r\n\ @param\ cost_per_distance\ Cost\ per\ distance\ unit\ in\ the\ map.\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment1.text=\r\n\ Main\ method\ to\ run\ program.\r\n\ \r\n\ @param\ args\ One\ argument\ input\ expected.\ Argument\ to\ describe\ cost\ per\ distance.\r\n
comment2.params=
comment2.target=void\ run()
comment2.text=\r\n\ Method\ to\ perform\ several\ read\ operations\ and\ run\ route\ algorithm\ in\ sequence.\r\n
comment3.params=
comment3.target=void\ readMap()
comment3.text=\r\n\ Method\ to\ read\ map\ details\ from\ an\ external\ file.\r\n\ Calls\ method\ in\ ExperimentController.\r\n
comment4.params=
comment4.target=void\ readGoods()
comment4.text=\r\n\ Method\ to\ read\ item\ price\ details\ from\ an\ external\ file.\r\n\ Calls\ methods\ in\ ExperimentController.\r\n
comment5.params=
comment5.target=void\ readLocations()
comment5.text=\r\n\ Method\ to\ read\ warehouse\ location\ details\ from\ an\ external\ file.\r\n\ Calls\ methods\ in\ ExperimentController.\r\n
comment6.params=
comment6.target=void\ runSim()
comment6.text=\r\n\ Method\ to\ run\ simulation\ that\ generates\ customers.\r\n\ Calls\ method\ in\ ExperimentController.\r\n
comment7.params=
comment7.target=void\ findRoutes()
comment7.text=\r\n\ Method\ to\ run\ algorithm\ that\ calculates\ routes\ for\ each\ vendor.\r\n\ Calls\ method\ in\ ExperimentController.\r\n
numComments=8
